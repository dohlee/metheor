name: Build Conda Packages

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ master, dev ]
  workflow_dispatch:

env:
  ANACONDA_USER: dohlee

jobs:
  build:
    name: Build on ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { target: linux-64, os: ubuntu-latest }
          - { target: osx-64, os: macos-13 }     # Intel Mac
          - { target: osx-arm64, os: macos-14 }  # Apple Silicon Mac

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pixi
        shell: bash
        run: |
          curl -fsSL https://pixi.sh/install.sh | bash
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH
          
      - name: Install rattler-build
        shell: bash
        run: |
          export PATH="$HOME/.pixi/bin:$PATH"
          pixi global install rattler-build

      - name: Build conda package
        shell: bash
        env:
          TARGET_PLATFORM: ${{ matrix.target }}
        run: |
          rattler-build build \
            --recipe recipe.yaml \
            --target-platform $TARGET_PLATFORM \
            --channel conda-forge \
            --output-dir ./output

      - name: List built packages
        shell: bash
        run: |
          echo "Built packages:"
          find output -name "*.conda" -o -name "*.tar.bz2"

      - name: Upload packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: conda-packages-${{ matrix.target }}
          path: |
            output/**/*.conda
            output/**/*.tar.bz2
          retention-days: 30

  upload:
    name: Upload to Anaconda Cloud
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages/

      - name: Install anaconda-client
        run: |
          pip install anaconda-client

      - name: Upload to Anaconda Cloud
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          set -e
          
          # Find all conda packages across all artifacts
          find packages -name "*.conda" -o -name "*.tar.bz2" | while read package; do
            echo "Uploading $package to anaconda.org..."
            
            # Upload with error handling - continue on duplicate packages
            if ! anaconda -t "$ANACONDA_API_TOKEN" upload "$package" --user ${{ env.ANACONDA_USER }} --label main --skip-existing; then
              echo "Warning: Upload of $package failed (possibly already exists)"
            else
              echo "Successfully uploaded $package"
            fi
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            packages/**/*.conda
            packages/**/*.tar.bz2
          generate_release_notes: true